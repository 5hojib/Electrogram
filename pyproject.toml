[project]
name = "electrogram"
dynamic = ["version"]
description = "Telegram MTProto API framework in Python, designed for fluid user and bot interactions."
authors = [{ name = "5hojib", email = "yesiamshojib@gmail.com" }]
license = { text = "MIT License" }
dependencies = [
    "pysocks",
    "aiosqlite",
    "pymediainfo",
    "pymongo",
    "TgCrypto-pyrofork",
    "uvloop"
]
requires-python = ">=3.9"

classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12"
]

[tool.hatch.version]
path = "pyrogram/__init__.py"

[tool.hatch.build.hooks.custom]

[project.urls]
homepage = "https://github.com/5hojib/electrogram"
community = "https://t.me/ProjectAeon"
repository = "https://github.com/5hojib/electrogram"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project.optional-dependencies]
dev = [
    "hatch",
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "twine"
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.sdist]
exclude = [
    ".github/",
    ".gitignore"
]

[tool.hatch.build.targets.wheel]
ignore-vcs = true
packages = [
    "pyrogram"
]

[tool.rye]
managed = true
dev-dependencies = [
    "ruff",
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "twine",
    "pre-commit",
]

[tool.ruff]
line-length = 99
target-version = "py39"

[tool.ruff.lint]
select = [
    "FURB", # refurb
    "I",    # isort
    "E",    # pycodestyle: error
    "W",    # pycodestyle: warning
    "UP",   # pyupgrade
    "F",    # pyflakes
    "SIM",  # flake8-simplify
    "RET",  # flake8-return
    "C4",   # flake8-comprehensions
    "PTH",  # flake8-use-pathlib
    "PERF", # perflint
    "N",    # pep8-naming
    "RUF",  # ruff
    "G",    # flake8-logging-format
    "TID",  # flake8-tidy-imports
    "TCH",  # flake8-type-checking
    "FA",   # flake8-future-annotations
    "PL",   # pylint
]
